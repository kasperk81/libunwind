name: crossbuild

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ 'master' ]
    tags: [ '*' ]
  workflow_dispatch:
    inputs:
      sourceUser:
        description: Source user/org
        required: true
        default: libunwind
      sourceBranch:
        description: Source branch
        required: true
        default: master

jobs:
  build-only:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host: [ 'x86-linux-gnu', 'arm-linux-gnueabihf', 'aarch64-linux-gnu', 's390x-linux-gnu',
        'mipsel-linux-gnu', 'powerpc64-linux-gnu', 'riscv64-linux-gnu' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and test
        run: |
          HOST=${{ matrix.host }}
          BUILD=x86_64-linux-gnu
          if [ $HOST = 'x86-linux-gnu' ]; then
            sudo apt update
            sudo apt install -yqq -o=Dpkg::Use-Pty=0 g++-multilib
            CFLAGS=" -m32"
            CXXFLAGS=" -m32"
          else
            sudo apt update
            sudo apt install -yqq -o=Dpkg::Use-Pty=0 g++-$HOST
            CC=$HOST-gcc
            CXX=$HOST-g++
          fi
          autoreconf -i
          ./configure CC=$CC CXX=$CXX CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" --build=$BUILD --host=$HOST
          make -j
          # only build tests don't run them
          make check -j TESTS=

      - name: On failure
        if: ${{ failure() }}
        run: cat tests/test-suite.log 2>/dev/null
